plugins {
    alias libs.plugins.android.app
    alias libs.plugins.kotlin
    alias libs.plugins.paparazzi
}

android {
    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.compose.compiler.get()
    }

    kotlinOptions {
        freeCompilerArgs += [
                '-P', 'plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=' +
                libs.versions.kotlin.get()
        ]
    }
}

tasks.named('check') {
    dependsOn tasks.named('verifyPaparazzi')
}

dependencies {
    implementation buildLibs.astring.core
    implementation buildLibs.astring.compose
    implementation libs.androidx.appcompat

    implementation libs.bundles.compose
    debugImplementation libs.androidx.compose.ui.tooling

    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.compose.ui.test
    androidTestImplementation libs.bundles.testing.android
}

afterEvaluate {
    dependencies.constraints.testImplementation 'com.google.guava:guava', {
        attributes {
            attribute(
                    TargetJvmEnvironment.TARGET_JVM_ENVIRONMENT_ATTRIBUTE,
                    objects.named(TargetJvmEnvironment, TargetJvmEnvironment.STANDARD_JVM)
            )
        }
    }
}
