plugins {
    id 'com.android.library' version '4.2.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.5.10' apply false
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'xyz.tynn.android.maven' version '0.1.0' apply false
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'xyz.tynn.idea.fix' version '0.1.2'
}

apply from: 'publishing.gradle'

allprojects {
    group = 'xyz.tynn.astring'

    repositories {
        google()
        mavenCentral()
    }
}

subprojects {
    pluginManager.withPlugin('com.android.library') {
        apply plugin: 'org.jetbrains.kotlin.android'
        apply from: "$rootDir/android.gradle"

        android {
            libraryVariants.all {
                it.generateBuildConfigProvider.configure {
                    enabled = false
                }
            }
        }

        tasks.withType(GenerateModuleMetadata).configureEach {
            enabled = false
        }

        dependencies {
            compileOnly 'org.jetbrains.kotlin:kotlin-stdlib'
        }
    }

    pluginManager.withPlugin('com.android.application') {
        apply from: "$rootDir/android.gradle"
    }

    pluginManager.withPlugin('maven-publish') {
        apply from: "$rootDir/publishing.gradle"
    }

    tasks.withType(Test).configureEach {
        testLogging {
            events "failed"
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
        }
    }
}

dependencyUpdates {
    def isNonStable = { version ->
        ['alpha', 'beta', 'dev', 'rc', 'cr', 'm', 'preview', 'b', 'ea', 'eap'].any {
            version ==~ /(?i).*[.-]${it}[.\d-+]*.*/
        }
    }
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
    gradleReleaseChannel = 'current'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
