plugins {
    alias libs.plugins.android apply false
    alias libs.plugins.kotlin apply false
    alias libs.plugins.kotlin.kapt apply false
    alias libs.plugins.project.convention
    alias libs.plugins.versions
    alias libs.plugins.publish
}

allprojects {
    group = 'xyz.tynn.astring'
}

subprojects {
    pluginManager.withPlugin('xyz.tynn.convention.android') {
        apply plugin: libs.plugins.kotlin.asProvider().get().pluginId

        java.toolchain.languageVersion.set JavaLanguageVersion.of(11)

        kotlin.explicitApi()

        android.kotlinOptions {
            afterEvaluate {
                if (!findProperty('isKotlinOnly')) freeCompilerArgs += [
                        '-Xno-call-assertions',
                        '-Xno-param-assertions',
                        '-Xno-receiver-assertions',
                ]
            }
        }

        dependencies {
            implementation libs.kotlin.stdlib
            testImplementation libs.bundles.testing
        }
    }

    pluginManager.withPlugin('maven-publish') {
        publishing.publications.all {
            pom {
                description = 'A context aware string abstraction for Android'
                developers {
                    developer {
                        id = 'tynn'
                        name = 'Christian Schmitz'
                        email = 'christian@tynn.xyz'
                    }
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

nexusPublishing.repositories.sonatype {
    nexusUrl.set uri('https://s01.oss.sonatype.org/service/local/')
}

tasks.named('wrapper') {
    gradleVersion '8.1.1'
}
